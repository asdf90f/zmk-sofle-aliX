#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  //  600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ { 
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
		
		hrm: require_prior_idle {
			compatible = "zmk,behavior-hold-tap";
			#binding-cells = <2>;
			flavor = "balanced";
			tapping-term-ms = <200>;
			quick-tap-ms = <200>;
			require-prior-idle-ms = <125>;
			bindings = <&kp>, <&kp>;
		};
		 
		mt: mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
            display-name = "Mod-Tap";
	    };
		
		lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;
            display-name = "Layer-Tap";
        };
    };
	
	combos {
        compatible = "zmk,combos";
		
        combo_OnOffQwertyLayer {
            timeout-ms = <30>;
            key-positions = <0 1>;
            bindings = <&tog 1>;
		};	
		combo_AudioOutputSwitch {
			timeout-ms = <30>;
			key-positions = <0 1 2>;
			bindings = <&kp LC(LS(LA(F1)))>;
	    };
		combo_DiscordMute {
			timeout-ms = <30>;
			key-positions = <0 1 2 3>;
			bindings = <&kp LA(B)>;
	    };
	};	

	scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        00_ColemakDH {
            bindings = <
&none        &none       &none         &none         &none            &none      &kp RET  &none      &none           &none         &none         &none       &none
&kp Q        &kp W       &kp F         &kp P         &kp B            &none      &kp RET  &none      &kp J           &kp L         &kp U         &kp Y       &kp APOS
&kp A        &kp R       &kp S         &kp T         &kp G            &none      &kp RET  &none      &kp M           &kp N         &kp E         &kp I       &kp O
&kp Z        &kp X       &kp C         &kp D         &kp V            &none      &kp RET  &none      &kp K           &kp H         &kp COMMA     &kp DOT     &kp FSLH
&none        &none       &mo 7         &lt 6 ESC     &mt LSHFT SPACE  &lt 4 TAB  &kp RET  &lt 3 RET  &mt LSHFT BSPC  &lt 2 DEL     &mo 5         &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "00_ColemakDH";
        };

        01_Qwerty {
            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3    &kp N4     &kp N5      &kp RET  &kp N6     &kp N7          &kp N8     &kp N9   &kp N0    &kp BSPC
&kp TAB    &kp Q   &kp W   &kp E     &kp R      &kp T       &kp RET  &kp Y      &kp U           &kp I      &kp O    &kp P     &kp APOS
&kp LCTRL  &kp A   &kp S   &kp D     &kp F      &kp G       &kp RET  &kp H      &kp J           &kp K      &kp L    &kp SEMI  &kp RET
&kp LSHFT  &kp Z   &kp X   &kp C     &kp V      &kp B       &kp RET  &kp N      &kp M           &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
&none      &none   &mo 7   &kp LALT  &kp SPACE  &lt 8 HOME  &kp RET  &lt 3 RET  &mt LSHFT BSPC  &lt 2 DEL  &mo 5    &none
            >;

            display-name = "01_Qwerty";
            sensor-bindings = <&scroll_encoder>;
        };

        02_Number {
            bindings = <
&none      &none    &none   &none    &none      &none      &kp RET  &none  &none   &none       &none      &none     &none
&kp LBKT   &kp N7   &kp N8  &kp N9   &kp RBKT   &none      &kp RET  &none  &none   &none       &none      &none     &none
&kp SEMI   &kp N4   &kp N5  &kp N6   &kp EQUAL  &none      &kp RET  &none  &none   &kp LCTRL   &kp LSHFT  &kp LALT  &kp LGUI
&kp GRAVE  &kp N1   &kp N2  &kp N3   &kp BSLH   &none      &kp RET  &none  &none   &none       &none      &none     &none
&none      &none    &none   &kp DOT  &kp N0     &kp MINUS  &kp RET  &none  &none   &trans      &none      &none
            >;

            display-name = "02_Number";
            sensor-bindings = <&scroll_encoder>;
        };
		
        03_Symbol {
            bindings = <
&none      &none     &none      &none      &none     &none      &kp RET  &none  &none  &none      &none      &none     &none
&kp LBRC   &kp AMPS  &kp STAR   &kp LPAR   &kp RBRC  &none      &kp RET  &none  &none  &none      &none      &none     &none
&kp COLON  &kp DLLR  &kp PRCNT  &kp CARET  &kp PLUS  &none      &kp RET  &none  &none  &kp LCTRL  &kp LSHFT  &kp LALT  &kp LGUI
&kp TILDE  &kp EXCL  &kp AT     &kp HASH   &kp PIPE  &none      &kp RET  &none  &none  &none      &none      &none     &none
&none      &none     &none      &kp LPAR   &kp RPAR  &kp UNDER  &kp RET  &trans &none  &none      &none      &none
            >;
			
            display-name = "03_Symbol";
            sensor-bindings = <&scroll_encoder>;
        };

        04_KeyNav {
            bindings = <
&none      &none      &none      &none      &none     &none   &kp RET  &none    &none     &none      &none      &none     &none
&kp HOME   &kp PG_DN  &kp PG_UP  &kp END    &kp INS   &none   &kp RET  &none    &none     &none      &none      &none     &none
&kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &kp CAPS  &none   &kp RET  &none    &none     &kp LCTRL  &kp LSHFT  &kp LALT  &kp LGUI
&kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(Y) &none   &kp RET  &none    &none     &none      &none      &none     &none
&none      &none      &none      &tog 1      &none    &trans  &kp RET  &kp RET  &kp BSPC  &kp DEL    &none      &none
            >;
			
            display-name = "04_KeyNav";
            sensor-bindings = <&scroll_encoder>;
        };

        05_MouseNav {
            bindings = <
&none           &none           &none         &none            &none     &none     &kp RET  &bootloader  &sys_reset  &none      &none      &none     &none
&msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &none     &none     &kp RET  &none        &none       &none      &none      &none     &none
&mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &none     &none     &kp RET  &none        &none       &kp LCTRL  &kp LSHFT  &kp LALT  &kp LGUI
&none           &none           &none         &mkp MB4         &mkp MB5  &none     &kp RET  &none        &none       &none      &none      &none     &none
&none           &none           &none         &mkp MB3         &mkp MB1  &mkp MB2  &kp RET  &none        &none       &none      &trans     &none
            >;
			
            display-name = "05_MouseNav";
            sensor-bindings = <&scroll_encoder>;
        };

        06_Function {
            bindings = <
&kp LG(LS(Z))  &kp LG(LS(S)) &kp PSCRN &none     &none     &none  &kp RET &none &none &none  &none  &none  &none
&none          &none         &none     &none     &none     &none  &kp RET &none &none &kp F7 &kp F8 &kp F9 &kp F10
&kp LGUI       &kp LALT      &kp LSHFT &kp LCTRL &none     &none  &kp RET &none &none &kp F4 &kp F5 &kp F6 &kp F11
&kp LC(Z)      &kp LC(X)     &kp LC(C) &kp LC(V) &kp LC(Y) &none  &kp RET &none &none &kp F1 &kp F2 &kp F3 &kp F12
&none          &none         &none     &trans    &none     &none  &kp RET &none &none &none  &none  &none
            >;
			
            display-name = "06_Function";
            sensor-bindings = <&scroll_encoder>;
        };

        07_Adjust {
            bindings = <
&none          &none         &none       &none       &sys_reset  &bootloader  &kp RET  &none  &none            &none            &none            &none            &none
&kp C_RW       &kp C_VOL_DN  &kp C_PREV  &kp C_STOP  &none       &none        &kp RET  &none  &rgb_ug RGB_SPD  &rgb_ug RGB_EFR  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD
&kp C_FF       &kp C_VOL_UP  &kp C_NEXT  &kp C_PP    &kp C_MUTE  &none        &kp RET  &none  &rgb_ug RGB_SPI  &rgb_ug RGB_EFF  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI
&none          &none         &none       &none       &none       &none        &kp RET  &none  &none            &none            &none            &none            &none
&none          &none         &trans      &none       &none       &none        &kp RET  &none  &rgb_ug RGB_TOG  &none            &none            &none
            >;
			
            display-name = "07_Adjust";
            sensor-bindings = <&scroll_encoder>;
        };	   
		
		08_GameFunction {
            bindings = <
&kp GRAVE  &kp N6  &kp N7  &kp N8  &kp N9   &kp N0  &kp RET  &kp LG(LS(Z)) &kp LG(LS(S)) &kp PSCRN  &none      &none     &none
&kp F10    &kp F7  &kp F8  &kp F9  &kp Y    &kp U   &kp RET  &none         &none         &none      &none      &none     &none
&kp F11    &kp F4  &kp F5  &kp F6  &kp H    &kp J   &kp RET  &none         &none         &kp LCTRL  &kp LSHFT  &kp LALT  &kp LGUI
&kp F12    &kp F1  &kp F2  &kp F3  &kp N    &kp M   &kp RET  &none         &none         &none      &none      &none     &none
&none      &none   &none   &tog 1  &none    &trans  &kp RET  &none         &none         &none      &none      &none
            >;
			
            display-name = "08_GameFunction";
            sensor-bindings = <&scroll_encoder>;
        };
    };
};
